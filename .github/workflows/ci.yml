---
# SPDX-FileCopyrightText: Jürgen Mülbert
# SPDX-License-Identifier: EUPL-1.2
#

name: Release Pipeline
run-name: "${{ github.event_name == 'workflow_dispatch' && format('CI: {0}', github.ref_name) || '' }}"


on: # yamllint disable-line rule:truthy
  push:
    branches: [main, develop, release]
    paths:
      - src/*
      - docs/*
      - .github/workflows/ci.yml
      - mkdocs.yml
      - pyproject.toml

  pull_request:
    types: [opened, reopened, synchronize]

  release:
    types: [published]

  workflow_dispatch:

env:
  FORCE_COLOR: "1"
  PACKAGE_NAME: checkconnect
  PYTHON_VERSION_FILE: .python-version

defaults:
  run:
    shell: bash

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true



jobs:
  validate:
    name: Validate Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧐 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: 🔎 Dependency Review
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@da24556b548a50705dd671f47852072ea4c105d9 # v4.7.1

  checks:
      name: Lint, Security, Pre-Commit, Docs Checks
      runs-on: ${{ matrix.os }}
      timeout-minutes: 20

      strategy:
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]

      steps:
        - name: 🔒 Harden Runner
          uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
          with:
            egress-policy: audit

        - name: 🧐 Checkout Repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
          with:
            fetch-depth: 0

        - name: "🐍 Set up Python"
          uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
          with:
            python-version-file: ${{ env.PYTHON_VERSION_FILE }}
            cache: pip
            cache-dependency-path: |
              pyproject.toml
              .github/workflows/requirements.txt

        - name: 🧰 Install Hatch and Dependencies
          run: |
            pip install -r .github/workflows/requirements.txt
            hatch env create lint
            hatch env create security
            hatch env create docs

        - name: 🔍 Linting
          run: hatch run lint:all

        - name: 🔐 Security Checks
          run: hatch run security:all

        - name: 🔍 Trivy Security Scan
          uses: aquasecurity/trivy-action@master
          with:
             scan-type: "fs"
             scan-ref: "."
             severity: "CRITICAL,HIGH"

        - name: 📝 Pre-Commit Hooks
          run: hatch run lint:precommit

        - name: 📚 Documentation Checks
          run: |
            hatch run docs:build
            hatch run docs:validate-links

        - name: 📖 Spell Check for Documentation
          run: codespell --ignore-words-list="TODO,Nit" --skip="*.py,*.json,*.yaml,*.yml,*.toml,*.lock"

  test-and-build:
    name: Test & Build
    needs: [validate, checks]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production
    outputs:
      version: ${{ steps.version.outputs.version }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        environment: [staging, production]
        exclude:
          - os: ubuntu-latest
            python-version: "3.12"
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: "🐍 Set up Python"
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: ${{ env.PYTHON_VERSION_FILE }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            .github/workflows/requirements.txt

      - name: 🧰 Install Requirements
        run: |
          pip install -r .github/workflows/requirements.txt
          hatch env create test

      - name: 🧪 Run Tests
        run: hatch test --python ${{ matrix.python-version }} --cover-quiet --randomize --parallel --retries 5 --retry-delay 3

      - name: 🔍 Disambiguate Coverage Filename
        run: mv .coverage ".coverage.${{ matrix.os }}.${{ matrix.python-version }}"

      - name: 📤 Upload Coverage Data
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: .coverage*

      - name:  📥 Download coverage 
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: 🔄 Combine coverage data
        run: hatch run coverage:combine

      - name: 📊 Export coverage reports
        run: |
          hatch run coverage:report-xml
          hatch run coverage:report-uncovered-html

      - name: 📤 Upload uncovered HTML report
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: uncovered-html-report
          path: htmlcov

      - name: 📑 Generate coverage summary
        run: hatch run coverage:generate-summary

      - name: 📝 Write coverage summary report
        if: github.event_name == 'pull_request'
        run: hatch run coverage:write-summary-report

      - name: 💬 Update coverage pull request comment
        if: github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2.9.4
        with:
          path: coverage-report.md

  release:
    name: Create Release
    needs: [test-and-build]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production
    permissions:
     contents: write
     id-token: write

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 📥 Download Artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: dist
          path: dist/

      - name: 📝 Create GitHub Release
        id: release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            files: |
              dist/*
              LICENSE
              README.md
            generate_release_notes: true
            discussion_category_name: Releases
            body: |
              ## Release ${{ nee ds.test-and-build.outputs.version }}

              ### 📦 Assets
              - Package: https://pypi.org/project/${{ env.PACKAGE_NAME }}/${{ needs.test-and-build.outputs.version }}

              ### 📊 Quality Checks
              - ✅ Matrix Tests (Python 3.9-3.12)
              - ✅ Type Checking
              - ✅ Documentation Tests
              - ✅ Security Scans
              - ✅ Pre-commit Hooks
              - ✅ Visual Regression Tests

              ### 🔍 Verification
              SHA256 hashes are available in the asset details.

              ### 📚 Documentation
              - Documentation: https://${{ env.PACKAGE_NAME }}.readthedocs.io/
              - Changelog: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md

      - name: 📢 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # 1.12.4
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true

  notify:
    name: Notifications
    needs: [release, test-and-build]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 📧 Process Status
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { release, test_and_build } = context.needs;
            const version = test_and_build.outputs.version;

            if (release.result === 'success') {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: `✅ Version ${version} published successfully!\n\n` +
                       `📦 PyPI: https://pypi.org/project/${{ env.PACKAGE_NAME }}/${version}\n` +
                       `📚 Docs: https://${{ env.PACKAGE_NAME }}.readthedocs.io/\n` +
                       `📊 Coverage reports available in build artifacts`
              });
            } else if (release.result === 'failure') {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: `❌ Release failed for version ${version}.\n` +
                      `Please check: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
              });
            }
