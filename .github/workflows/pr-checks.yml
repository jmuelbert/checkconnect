---
# SPDX-FileCopyrightText: J√ºrgen M√ºlbert
# SPDX-License-Identifier: EUPL-1.2

name: PR Checks

on: # yamlint disable-line rule:truthy
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - develop
      - feature/**
      - bugfix/**

permissions:
  contents: read

env:
  PYTHON_VERSION_FILE: .python-version
  PACKAGE_NAME: jmbde-python

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7
        with:
          egress-policy: audit

      - name: üì• Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: üîé Dependency Review
        id: review
        uses: actions/dependency-review-action@3b139cfc5fae8b618d3eae3675e383bb1769c019
        with:
          comment-summary-in-pr: always
          fail-on-severity: moderate
          retry-on-snapshot-warnings: true
          config-file: .github/dependency-review-config.yml

  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üì• Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: üîç Check PR Title and Body
        uses: your-custom-action/pr-validation # Replace with your custom action
        with:
          conventional-commit-regex: /^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)\b(\([\w-]+\))?:.{1,100}$/
          required-body-sections: Description, Related Issue, Testing

      - name: üí¨ Commit Message Linting
        run: |
          npm install --global @commitlint/cli @commitlint/config-conventional
          echo "module.exports = {extends: ['@commitlint/config-conventional']};" > commitlint.config.js
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }}

  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    needs: [validate, validate-pr]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          - os: macos-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.9'

    outputs:
      coverage: ${{ steps.coverage.outputs.percentage }}

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üß∞ Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: ‚öôÔ∏è Setup Python
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}

      - name: üé® Setup Qt Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb-xinerama0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-shape0 \
            libxcb-xkb1 \
            libxkbcommon-x11-0 \
            libegl1

      - name: üß™ Run Tests
        run: hatch run test:test

      - name: üìä Generate Coverage
        id: coverage
        run: |
          hatch run test:cov
          COVERAGE=$(coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "percentage=${COVERAGE}" >> "$GITHUB_OUTPUT"

          if [ "${COVERAGE}" -lt "80" ]; then
            echo "::warning::Coverage ${COVERAGE}% is below threshold of 80%"
          fi

      - name: üì§ Upload Coverage
        uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457 # v3.1.6
        with:
          files: ./coverage.xml
          flags: ${{ matrix.os }},python-${{ matrix.python-version }}
          fail_ci_if_error: true

      - name: üì¶ Store Test Results
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            .coverage
            coverage.xml
            htmlcov/
          retention-days: 7

  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      issues: write
      pull-requests: write

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üß∞ Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: ‚öôÔ∏è Setup Python
        uses: ./.github/actions/setup
        with:
          python-version-file: ${{ env.PYTHON_VERSION_FILE }}

      - name: ‚ú® Run Pre-commit Checks
        run: hatch run lint:precommit

  spell-check:
    name: Spell Check
    runs-on: ubuntu-latest
    needs: quality-checks
    timeout-minutes: 15

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üß∞ Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: ‚öôÔ∏è Setup Python
        uses: ./.github/actions/setup
        with:
          python-version-file: ${{ env.PYTHON_VERSION_FILE }}

      - name: üîç Run Spell Checks
        id: spell-check
        run: |
          echo "Running codespell..."
          hatch env create lint
          hatch run lint:spell > codespell.txt || true
          # Check if any changes were made
          if git diff --quiet; then
            echo "changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "changes=true" >> "$GITHUB_OUTPUT"
            git diff --name-only > changed_files.txt
          fi

      - name: üîÑ Create Fix PR
        if: steps.spell-check.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'docs: fix spelling issues'
          title: 'üìù Fix spelling issues'
          body-path: spell_check_report.md
          branch: fix/spelling-${{ github.run_id }}
          delete-branch: true
          labels: |
            documentation
            automated-pr
            spelling

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üß∞ Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: ‚öôÔ∏è Setup Python
        uses: ./.github/actions/setup
        with:
          python-version-file: ${{ env.PYTHON_VERSION_FILE }}

      - name: üìö Build Docs
        id: build
        run: |
          hatch run docs:build
          echo "doc-files=$(find site -type f -print | wc -l)" >> "$GITHUB_OUTPUT"

      - name: üîç Check Links
        run: |
          hatch run docs:validate-links
          echo "Checking internal links..."
          broken_links=$(find site -type f -name "*.html" -exec grep -l "page-not-found" {} \;)
          if [ ! -z "$broken_links" ]; then
            echo "::error::Found broken internal links in: $broken_links"
            exit 1
          fi

      - name: üîç Quality Check
        run: |
          python docs/scripts/doc_quality.py
        continue-on-error: true # Optional: Don't fail the build for quality issues

      - name: üìä Translation Status
        id: translations
        run: |
          missing_translations=$(find docs/i18n -type f -name "*.md" | wc -l)
          total_docs=$(find docs/en -type f -name "*.md" | wc -l)
          echo "translation_coverage=$((missing_translations * 100 / total_docs))" >> "$GITHUB_OUTPUT"

  report:
    name: Generate Report
    if: always()
    needs: [validate, validate-pr, test, quality-checks, spell-check, docs]
    runs-on: ubuntu-latest

    steps:
      - name: üìä Process Results
        if: always()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const summary = `## üîç PR Check Results

            ### Test Coverage: ${process.env.TEST_COVERAGE}%
            - Validate: ${process.env.VALIDATE_RESULT}
            - Validate-PR: ${process.env.VALIDATE_PR_RESULT}
            - Status: ${process.env.TEST_RESULT}
            - Quality-Checks: ${process.env.QUALITY_CHECKS_RESULT}
            - Spell-Check: ${process.env.SPELL_CHECK_RESULT}
            - Docs: ${process.env.DOCS_RESULT}

            ### Details
            - [Coverage Report](https://codecov.io/gh/${process.env.REPOSITORY})
            - [Test Results](${process.env.GITHUB_SERVER_URL}/${process.env.REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;

            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.payload.pull_request.number,
                body: summary
              });
            }
        env:
          TEST_COVERAGE: ${{ needs.test.outputs.coverage }}
          VALIDATE_RESULT: ${{ needs.validate.result }}
          VALIDATE_PR_RESULT: ${{ needs.validate-pr.result }}
          TEST_RESULT: ${{ needs.test.result }}
          QUALITY_CHECKS_RESULT: ${{ needs.quality-checks.result }}
          SPELL_CHECK_RESULT: ${{ needs.spell-check.result }}
          DOCS_RESULT: ${{ needs.docs.result }}
          REPOSITORY: ${{ github.repository }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_RUN_ID: ${{ github.run_id }}

      - name: üö® Check Status
        if: needs.test.result != 'success' || needs.quality-checks.result != 'success' || needs.docs.result != 'success' || needs.spell-check.result != 'success'
        run: exit 1